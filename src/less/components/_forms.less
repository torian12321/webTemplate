/*
## Form elements
# Inputs
```
<div class="form-input">
	<input id="check-1" type="text">
	<label for="check-1">test</label>
</div>

<div class="form-input">
	<input id="check-2" type="password">
	<label for="check-2">password</label>
</div>

<div class="form-input">
	<textarea id="check-3"></textarea>
	<label for="check-3">Description</label>
</div>
```
*/
.form-input{
	position: relative;
	padding :  @inputHeight 0 10px;

	label{
		position   : absolute;
		left       : 10px;
		top        : @inputHeight;
		line-height: @inputHeight;
		color      : @themeColor_1;
		.transition();
	}
	input:focus + label,
	textarea:focus + label,
	input.filled + label,
	textarea.filled + label{
		top: -5px;
	}
}


/*
# Check
```
<div class="form-check">
	<input id="check-4" type="checkbox">
	<label for="check-4"></label>
</div>

<div class="form-check">
	<input id="check-5" type="checkbox" checked>
	<label for="check-5"></label>
</div>
```

# Check (texted)
```
<div class="form-check texted">
	<input id="check-6" type="checkbox">
	<label for="check-6"></label>
</div>

<div class="form-check texted">
	<input id="check-7" type="checkbox" checked>
	<label for="check-7"></label>
</div>
```
*/
.form-check{
	@height         : @inputHeight;
	@width          : @height * 2;
	@ball-height    : @height * 0.8;
	@transition-time: 0.20s;

	input[type="checkbox"]{
		display: none;

		& + label{
			position  : relative;
			display   : block;
			width     : @width;
			height    : @height;
			background: @colorState_disable;
			cursor    : pointer;
			.rounded(@height);
			.transition(@property: background-color; @time: @transition-time);
			&:after{
				position  : absolute;
				content   : '';
				left      : (@height - @ball-height) / 2;
				top       : (@height - @ball-height) / 2;
				height    : @ball-height;
				width     : @ball-height;
				background: @themeColor_1;
				.rounded(50%);
				.transition(@transition-time);
			}
		}
		&:checked + label{
			background: @themeColor_2;
			&:after{
				left: @width - @ball-height - ((@height - @ball-height) / 2);
			}
		}
	}


	&.texted input[type="checkbox"]{
		& + label{
			&:before{
				position   : absolute;
				content    : 'Off';
				right      : 12.5%;
				font-size  : @height * 0.5;
				line-height: @height;
				color      : @white;
				.transition(@transition-time);
			}
		}
		&:checked + label{
			&:before{
				content: 'On';
				right  : 55%;
			}
		}
	}
}

/*
# Select - Single
```
<div>
	<ul class="form-selectSingle">
		<li>
			<input type="radio" id="option_01" name="ss" checked>
	    	<label for="option_01">All types</label>
		</li>
		<li>
			<input type="radio" id="option_02" name="ss">
	    	<label for="option_02">Second-hand</label>
		</li>
		<li>
			<input type="radio" id="option_03" name="ss">
	    	<label for="option_03">New</label>
		</li>
	</ul>
</div>
```

# Select - Multiple
```
<div>
	<ul class="form-selectMultiple">
		<li>
			<input type="checkbox" id="option_04" name="selector" checked>
	    	<label for="option_04">All types</label>
		</li>
		<li>
			<input type="checkbox" id="option_05" name="selector">
	    	<label for="option_05">Second-hand</label>
		</li>
		<li>
			<input type="checkbox" id="option_06" name="selector">
	    	<label for="option_06">New</label>
		</li>
	</ul>
</div>
```

# Select - Multiple (hollow)
```
<div>
	<ul class="form-selectMultiple hollow">
		<li>
			<input type="checkbox" id="smh-1" name="smh" checked>
	    	<label for="smh-1">All types</label>
		</li>
		<li>
			<input type="checkbox" id="smh-2" name="smh">
	    	<label for="smh-2">Second-hand</label>
		</li>
		<li>
			<input type="checkbox" id="smh-3" name="smh">
	    	<label for="smh-3">New</label>
		</li>
	</ul>
</div>
```
*/

.form-selectSingle,
.form-selectMultiple{

	text-transform: uppercase;
	color         : @fontColor_grey;

	input{
		display: none;
		& + label{
			display   : block;
			padding   : 9px 12px;
			margin    : 0 0 6px;
			background: darken(@themeColor_2, 10%);
			cursor    : pointer;
			.transition();
			.rounded(@BRadious);
			.font();
			&:hover{
				background: darken(@themeColor_1, 25%);
			}
		}
		&:checked + label{
			background: @themeColor_1;
			color     : @fontColor_white;
		}
	}
	&.hollow{
		input{
			& + label{
				background: transparent;
				color     : @themeColor_1;
				border    : @themeColor_1 1px solid !important;
			}
			&:checked + label{
				background: @themeColor_1;
				color     : @fontColor_white;
			}
		}
	}
}
/*
# Select - Single (single line)
```
<div>
	<ul class="form-selectSingle singleLine">
		<li>
			<input type="radio" id="option_01-1" name="selector" checked>
	    	<label for="option_01-1">All types</label>
		</li>
		<li>
			<input type="radio" id="option_01-2" name="selector">
	    	<label for="option_01-2">Second-hand</label>
		</li>
		<li>
			<input type="radio" id="option_01-3" name="selector">
	    	<label for="option_01-3">New</label>
		</li>
	</ul>
</div>
```


# Select - Multiple (single line)
```
<div>
	<ul class="form-selectMultiple singleLine">
		<li>
			<input type="checkbox" id="option_02-1" name="selector" checked>
	    	<label for="option_02-1">All types</label>
		</li>
		<li>
			<input type="checkbox" id="option_02-2" name="selector">
	    	<label for="option_02-2">Second-hand</label>
		</li>
		<li>
			<input type="checkbox" id="option_02-3" name="selector">
	    	<label for="option_02-3">New</label>
		</li>
	</ul>
</div>
```

# Select - Single (single line + hollow + arrow)
```
<div>
	<ul class="form-selectSingle singleLine hollow arrowed">
		<li>
			<input type="radio" id="sslha-1" name="sslha" checked>
	    	<label for="sslha-1">All types</label>
		</li>
		<li>
			<input type="radio" id="sslha-2" name="sslha">
	    	<label for="sslha-2">Second-hand</label>
		</li>
		<li>
			<input type="radio" id="sslha-3" name="sslha">
	    	<label for="sslha-3">New</label>
		</li>
	</ul>
</div>
```
*/

.form-selectSingle.singleLine,
.form-selectMultiple.singleLine{
	li{
		display: inline-block;
		margin : 0 -2px;
		label{
			border-right : 2px solid @themeColor_1;
			padding-left : 30px;
			padding-right: 30px;
			.rounded(0);
		}

		@BR: @BRadious * 1;
		&:first-child label{
			.rounded(@BR , 0, 0, @BR);
		}
		&:last-child label{
			border-right: 0;
			.rounded(0, @BR, @BR, 0);
		}
	}
	&.arrowed input{
		& + label{
			position: relative;
			&:after{
				content         : '';
				position        : absolute;
				left            : 50%;
				top             : 100%;
				margin-left     : 0;
				height          : 0;
				width           : 0;
				border          : solid transparent 0;
				.transition(border margin-left);
			}
		}
		&:checked + label:after{
			@size: 12px;

			margin-left     : -@size;
			border          : solid transparent @size;
			border-top-color: @themeColor_1;
		}
	}
}
/*
# Select List
```
<div class="form-selectList">
	<select name="slct" id="slct">
		<option>Choose an option</option>
		<option value="1">Option A</option>
		<option value="2">Option B</option>
		<option value="3">Option C</option>
		<option value="4">Option D</option>
	</select>
</div>
```
*/

.form-selectList{
	position   : relative;
	display    : block;
	width      : 100%;
	height     : @inputHeight;
	line-height: @inputHeight;
	overflow   : hidden;
	.rounded(@BRadious);
	// Arrow
	&::after {
		content       : '\25BC';
		position      : absolute;
		top           : 0;
		right         : 0;
		bottom        : 0;
		padding       : 0 1em;
		color         : @fontColor_white;
		pointer-events: none;
	}
}